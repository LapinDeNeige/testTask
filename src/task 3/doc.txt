Задание выполнено в объекто-ориентированном стиле, а это значит, что аргументы только принимаются при создании класса(в конструкторе)
Класс состоит из 7 методов (функций)

1. generateBarcode() -  последовательная генерация случайных чисел и их сохранение
2. bookOrder() API для бронирования билетов - функция заглушка(мок)
3. confirmOrder() API для подтверждения бронирования - функция заглушка(мок)
4. getEqualPrice() - подсчёт суммы взрослых и детских билетов
5. getCreatedData() - получение текущей даты в формате Y-m-d
6. saveInDatabase()  - подключение к БД и сохранение данных. В случае неудачи выбрасывается исключение
7. addTicketsToDB() - метод,запускающий работу программы. Сначала он получает суммы цен (вызовом метода getEqualPrice()), потом 
получает текущую дату(вызовом метода getCreatedData()),генерирует баркод, вызывая метод generateBarcode(), потом бронирует заказ,
в случае ошибки возвращается на шаг генерации нового баркода методом goto. В случае успеха вызывается подтверждение бронирования,
и если все прошло успешно, результат сохраняется в БД путём вызова метода saveDatabase

Пример вызова класса
$order=new Order(123,date_create("2011-10-10")->format('Y-m-d'),50,11,12,12);
$order->addTicketsToDB();